Machine-level Assembler Version 7.1    Thu Oct 29 18:07:57 2020

  LOC    OBJ   SOURCE
hex*dec

                        !b                                      bprog.mas
0  *0    000C  start:   ld     @2       ; load 2
1  *1    100B           st     x        ;
2  *2    7000           flip            ; flip bits in ac
3  *3    3001           addc   1        ; get -2
4  *4    8000           push            ; -2 now at rel addr 0
5  *5    200D           mult   @_3      ; multiply ac by x
6  *6    4000           addr   0        ; add -2 from stack
7  *7    6003           shll   3        ; multiply by 8 by shifting
8  *8    500A           jn     done     ; jump if ac is negative
9  *9    FFFD           dout            ; output ac in decimal
A  *10   FFFF  done:    halt
B  *11   0000  x:       dw     0
C  *12   0002  @2:      dw     2
D  *13   FFFD  @_3:     dw    -3
E  *14   ========= end of bprog.mas ==============================


         Symbol/Cross-Reference Table

Symbol                   Address     References
                          (hex)       (hex)

 start                     0          
 done                      A           8  
 x                         B           1  
 @2                        C           0  
 @_3                       D           5  

Input file   = bprog.mas
Output file  = bprog.mac
List file    = bprog.lst 
Config file  = b.cfg 
Number base  = decimal
Label status = case sensitive
