Machine-level Assembler Version 7.1    Mon Dec 14 12:01:05 2020

  LOC    OBJ   SOURCE
hex*dec

               !o
               
               
0  *0    02AD  ask:		ld indexA
1  *1    32AD  		sub indexA
2  *2    12AD  		st indexA
3  *3    02AE  		ld indexB
4  *4    32AE  		sub indexB
5  *5    12AE  		st indexB
6  *6    02B4  		ld IndexColumn
7  *7    32B4  		sub IndexColumn
8  *8    12B4  		st IndexColumn
9  *9    02B0  		ld indexD		
A  *10   32B0  		sub indexD
B  *11   12B0  		st indexD
C  *12   80B8  		ldc msg1
D  *13   FFF7  		sout
E  *14   FFFC  		din
F  *15   C0B7  		jz end
10 *16   D011  		jnz matrixSize
               
11 *17   80F7  matrixSize:	ldc msg2
12 *18   FFF7  		sout
13 *19   FFFC  		din
14 *20   12A9  	        st n
15 *21   02A9  		ld n
16 *22   12B1  		st column
17 *23   02A9  		ld n
18 *24   12B2  		st row
19 *25   02A9  		ld n
1A *26   12AA  		st nKey
1B *27   02A9  		ld n
1C *28   F300   		push
1D *29   02A9  		ld n
1E *30   FF40  		mult
1F *31   12AB  		st countA
20 *32   02AB  		ld countA		
21 *33   12AC  		st countB
22 *34   D024  		jnz storeA
23 *35   C0B7  		jz end
               
24 *36   814A  storeA:		ldc msg3
25 *37   FFF7  		sout
26 *38   FFFC  		din
27 *39   F300  		push
28 *40   817D  		ldc a
29 *41   22AD  		add indexA
2A *42   F200  		sti
2B *43   02AD  		ld indexA
2C *44   22B6  		add one
2D *45   12AD  		st indexA
2E *46   02AB  		ld countA    
2F *47   32B6  		sub one
30 *48   12AB  		st countA
31 *49   C033  		jz storeB    
32 *50   9024  		ja storeA
               
               
33 *51   8161  storeB:		ldc msg4
34 *52   FFF7  		sout
35 *53   FFFC  		din
36 *54   F300  		push
37 *55   81E1  		ldc b
38 *56   22AE  		add indexB
39 *57   F200  		sti
3A *58   02AE  		ld indexB
3B *59   22B6  		add one
3C *60   12AE  		st indexB
3D *61   02AC  		ld countB
3E *62   32B6  		sub one
3F *63   12AC  		st countB
40 *64   02AC  		ld countB
41 *65   C043  		jz resetIndex    
42 *66   D033  		jnz storeB
               
43 *67   02AD  resetIndex: 	ld indexA
44 *68   32AD  		sub indexA
45 *69   12AD  		st indexA
46 *70   02AE  		ld indexB
47 *71   32AE  		sub indexB
48 *72   12AE  		st indexB
49 *73   02AF  		ld indexC
4A *74   32AF  		sub indexC
4B *75   12AF  		st indexC
4C *76   02B9  		ld temp
4D *77   32B9  		sub temp
4E *78   12B9  		st temp
4F *79   02A9  		ld n
50 *80   12AA  		st nKey
51 *81   02A9  		ld n
52 *82   12B3  		st rowCount
53 *83   02A9  		ld n
54 *84   12B5  		st rowIndex
55 *85   9056  		ja rowMult
               
56 *86   817D  rowMult:	ldc a
57 *87   22AD  		add indexA
58 *88   F100  		ldi
59 *89   F300  		push
5A *90   02AD  		ld indexA
5B *91   22B6  		add one
5C *92   12AD  		st indexA
5D *93   02AA  		ld nKey
5E *94   32B6  		sub one
5F *95   12AA  		st nKey
60 *96   9083  		ja columnMult
               
61 *97   02B3  resetColumn:	ld rowCount
62 *98   32B6  		sub one
63 *99   12B3  		st rowCount
64 *100  02B3  		ld rowCount
65 *101  C073  		jz resetRow
66 *102  02AD  		ld indexA
67 *103  32A9  		sub n
68 *104  12AD  		st indexA
69 *105  02A9  		ld n
6A *106  12AA  		st nKey
6B *107  02B4  		ld IndexColumn	
6C *108  22B6  		add one
6D *109  12B4  		st IndexColumn
6E *110  02AE  		ld indexB
6F *111  32AE  		sub indexB
70 *112  22B4  		add IndexColumn
71 *113  12AE  		st indexB
72 *114  9056  		ja rowMult
               
73 *115  02B5  resetRow:	ld rowIndex
74 *116  32B6  		sub one
75 *117  12B5  		st rowIndex
76 *118  02B5  		ld rowIndex
77 *119  C09B  		jz display
78 *120  02AE  		ld indexB
79 *121  32AE  		sub indexB
7A *122  12AE  		st indexB
7B *123  02A9  		ld n
7C *124  12B3  		st rowCount
7D *125  02A9  		ld n
7E *126  12AA  		st nKey
7F *127  02B4  		ld IndexColumn
80 *128  32B4  		sub IndexColumn
81 *129  12B4  		st IndexColumn
82 *130  9056  		ja rowMult
               		
               
83 *131  81E1  columnMult:	ldc b
84 *132  22AE  		add indexB
85 *133  F100  		ldi
86 *134  FF40  		mult
87 *135  22B9  		add temp
88 *136  12B9  		st temp
89 *137  02AE  		ld indexB
8A *138  22A9  		add n
8B *139  12AE  		st indexB
8C *140  02AA  		ld nKey
8D *141  C08F  		jz store
8E *142  9056  		ja rowMult
               
8F *143  02B9  store:		ld temp
90 *144  F300  		push
91 *145  8245  		ldc c
92 *146  22AF  		add indexC
93 *147  F200  		sti
94 *148  02AF  		ld indexC
95 *149  22B6  		add one
96 *150  12AF  		st indexC
97 *151  02B9  		ld temp
98 *152  32B9  		sub temp
99 *153  12B9  		st temp
9A *154  9061  		ja resetColumn
               
9B *155  8178  display:	ldc msg5
9C *156  FFF7  		sout
9D *157  800A  		ldc '\n'
9E *158  FFFB  		aout
9F *159  90A0  		ja displayC
               
A0 *160  8245  displayC:	ldc c 
A1 *161  22B0  		add indexD
A2 *162  F100  		ldi
A3 *163  FFFD  		dout
A4 *164  82B7  		ldc space
A5 *165  FFF7  		sout
A6 *166  02B0  		ld indexD
A7 *167  22B6  		add one
A8 *168  12B0  		st indexD
A9 *169  02B1  		ld column
AA *170  32B6  		sub one 
AB *171  12B1  		st column
AC *172  C0AE  		jz rowDown
AD *173  D0A0  		jnz displayC
                		
AE *174  02A9  rowDown:	ld n
AF *175  12B1  		st column
B0 *176  800A  		ldc '\n'
B1 *177  FFFB  		aout
B2 *178  02B2  		ld row	
B3 *179  32B6  		sub one 
B4 *180  12B2  		st row
B5 *181  C000  		jz ask
B6 *182  D0A0  		jnz displayC
               
               
B7 *183  FFFF  end:		halt
               
               
B8 *184  0045  msg1: dw "Enter 1 if you have a problem to enter, and 0 if you'r
B9 *185  006E
BA *186  0074
BB *187  0065
BC *188  0072
BD *189  0020
BE *190  0031
BF *191  0020
C0 *192  0069
C1 *193  0066
C2 *194  0020
C3 *195  0079
C4 *196  006F
C5 *197  0075
C6 *198  0020
C7 *199  0068
C8 *200  0061
C9 *201  0076
CA *202  0065
CB *203  0020
CC *204  0061
CD *205  0020
CE *206  0070
CF *207  0072
D0 *208  006F
D1 *209  0062
D2 *210  006C
D3 *211  0065
D4 *212  006D
D5 *213  0020
D6 *214  0074
D7 *215  006F
D8 *216  0020
D9 *217  0065
DA *218  006E
DB *219  0074
DC *220  0065
DD *221  0072
DE *222  002C
DF *223  0020
E0 *224  0061
E1 *225  006E
E2 *226  0064
E3 *227  0020
E4 *228  0030
E5 *229  0020
E6 *230  0069
E7 *231  0066
E8 *232  0020
E9 *233  0079
EA *234  006F
EB *235  0075
EC *236  0027
ED *237  0072
EE *238  0065
EF *239  0020
F0 *240  0064
F1 *241  006F
F2 *242  006E
F3 *243  0065
F4 *244  003A
F5 *245  0020
F6 *246  0000
F7 *247  0057  msg2: dw "What is the size of the matrix, number must be <= 1 &&
F8 *248  0068
F9 *249  0061
FA *250  0074
FB *251  0020
FC *252  0069
FD *253  0073
FE *254  0020
FF *255  0074
100*256  0068
101*257  0065
102*258  0020
103*259  0073
104*260  0069
105*261  007A
106*262  0065
107*263  0020
108*264  006F
109*265  0066
10A*266  0020
10B*267  0074
10C*268  0068
10D*269  0065
10E*270  0020
10F*271  006D
110*272  0061
111*273  0074
112*274  0072
113*275  0069
114*276  0078
115*277  002C
116*278  0020
117*279  006E
118*280  0075
119*281  006D
11A*282  0062
11B*283  0065
11C*284  0072
11D*285  0020
11E*286  006D
11F*287  0075
120*288  0073
121*289  0074
122*290  0020
123*291  0062
124*292  0065
125*293  0020
126*294  003C
127*295  003D
128*296  0020
129*297  0031
12A*298  0020
12B*299  0026
12C*300  0026
12D*301  0020
12E*302  003E
12F*303  003D
130*304  0020
131*305  0031
132*306  0030
133*307  002C
134*308  0020
135*309  0065
136*310  006E
137*311  0074
138*312  0065
139*313  0072
13A*314  0020
13B*315  007A
13C*316  0065
13D*317  0072
13E*318  006F
13F*319  0020
140*320  0074
141*321  006F
142*322  0020
143*323  0073
144*324  0074
145*325  006F
146*326  0070
147*327  003A
148*328  0020
149*329  0000
14A*330  0045  msg3: dw "Enter matrix A input: "
14B*331  006E
14C*332  0074
14D*333  0065
14E*334  0072
14F*335  0020
150*336  006D
151*337  0061
152*338  0074
153*339  0072
154*340  0069
155*341  0078
156*342  0020
157*343  0041
158*344  0020
159*345  0069
15A*346  006E
15B*347  0070
15C*348  0075
15D*349  0074
15E*350  003A
15F*351  0020
160*352  0000
161*353  0045  msg4: dw "Enter matrix B input: "
162*354  006E
163*355  0074
164*356  0065
165*357  0072
166*358  0020
167*359  006D
168*360  0061
169*361  0074
16A*362  0072
16B*363  0069
16C*364  0078
16D*365  0020
16E*366  0042
16F*367  0020
170*368  0069
171*369  006E
172*370  0070
173*371  0075
174*372  0074
175*373  003A
176*374  0020
177*375  0000
178*376  0043  msg5: dw "C = "
179*377  0020
17A*378  003D
17B*379  0020
17C*380  0000
17D*381  0000  a: dw 100 dup 0
1E1*481  0000  b: dw 100 dup 0
245*581  0000  c: dw 100 dup 0
2A9*681  0000  n: dw 0
2AA*682  0000  nKey: dw 0
2AB*683  0000  countA: dw 0
2AC*684  0000  countB: dw 0
2AD*685  0000  indexA: dw 0
2AE*686  0000  indexB: dw 0
2AF*687  0000  indexC: dw 0
2B0*688  0000  indexD: dw 0
2B1*689  0000  column: dw 0
2B2*690  0000  row: dw 0
2B3*691  0000  rowCount: dw 0
2B4*692  0000  IndexColumn: dw 0
2B5*693  0000  rowIndex: dw 0
2B6*694  0001  one: dw 1
2B7*695  0020  space: dw " "
2B8*696  0000
2B9*697  0000  temp: dw 0
2BA*698  ========= end of s4test.mas =============================


         Symbol/Cross-Reference Table

Symbol                   Address     References
                          (hex)       (hex)

 ask                       0           B5 
 matrixSize                11          10 
 storeA                    24          22  32 
 storeB                    33          31  42 
 resetIndex                43          41 
 rowMult                   56          55  72  82  8E 
 resetColumn               61          9A 
 resetRow                  73          65 
 columnMult                83          60 
 store                     8F          8D 
 display                   9B          77 
 displayC                  A0          9F  AD  B6 
 rowDown                   AE          AC 
 end                       B7          F   23 
 msg1                      B8          C  
 msg2                      F7          11 
 msg3                      14A         24 
 msg4                      161         33 
 msg5                      178         9B 
 a                         17D         28  56 
 b                         1E1         37  83 
 c                         245         91  A0 
 n                         2A9         14  15  17  19  1B 
                                       1D  4F  51  53  67 
                                       69  7B  7D  8A  AE 
 nKey                      2AA         1A  50  5D  5F  6A 
                                       7E  8C 
 countA                    2AB         1F  20  2E  30 
 countB                    2AC         21  3D  3F  40 
 indexA                    2AD         0   1   2   29  2B 
                                       2D  43  44  45  57 
                                       5A  5C  66  68 
 indexB                    2AE         3   4   5   38  3A 
                                       3C  46  47  48  6E 
                                       6F  71  78  79  7A 
                                       84  89  8B 
 indexC                    2AF         49  4A  4B  92  94 
                                       96 
 indexD                    2B0         9   A   B   A1  A6 
                                       A8 
 column                    2B1         16  A9  AB  AF 
 row                       2B2         18  B2  B4 
 rowCount                  2B3         52  61  63  64  7C 
 IndexColumn               2B4         6   7   8   6B  6D 
                                       70  7F  80  81 
 rowIndex                  2B5         54  73  75  76 
 one                       2B6         2C  2F  3B  3E  5B 
                                       5E  62  6C  74  95 
                                       A7  AA  B3 
 space                     2B7         A4 
 temp                      2B9         4C  4D  4E  87  88 
                                       8F  97  98  99 

Input file   = s4test.mas
Output file  = s4test.mac
List file    = s4test.lst 
Config file  = o.cfg 
Number base  = decimal
Label status = case sensitive
